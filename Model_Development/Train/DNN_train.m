function DNN=DNN_train(x_i,x_q,y_i,y_q,M)
% 设置输入/输出矩阵，并设计网络
dim = length(x_i);
X = zeros(2*(M + 1), dim-M);
for j = 1:length(y_i) - M
    X(:, j) = [y_i(j : j + M); y_q(j : j + M)];
end
Y = [x_i(M + 1 : end)'; x_q(M + 1 : end)'];
layers = [
    sequenceInputLayer((2*(M+1)),"Name","sequence")
    fullyConnectedLayer(8,"Name","fc_1")
    reluLayer("Name","relu_1")
    fullyConnectedLayer(8,"Name","fc_2")
    reluLayer("Name","relu_2")
    fullyConnectedLayer(2,"Name","Regression Output")
    regressionLayer("Name","regressionoutput")];

% 调整参数，并训练模型
% 更多细节可见：https://ww2.mathworks.cn/help/deeplearning/ref/trainingoptions.html
num = 7000;
X_Validation = X(:, num:end);
Y_Validation = Y(:, num:end);
maxEpochs = 2000;
miniBatchSize = 512;
options = trainingOptions('adam', ...
    'MaxEpochs', maxEpochs, ...
    'MiniBatchSize', miniBatchSize, ...
    'InitialLearnRate', 0.005, ...
    'GradientThreshold', 1, ...
    'ValidationData', {X_Validation, Y_Validation}, ...
    'ValidationFrequency', 500, ...
    'Shuffle', 'never', ...
    'Plots', 'training-progress', ...
    'ExecutionEnvironment', 'gpu', ...
    'LearnRateSchedule', 'piecewise', ...
    'LearnRateDropFactor', 0.5, ...
    'LearnRateDropPeriod', 600, ...
    'Verbose', 1, ...
    'VerboseFrequency', 1000);
%   'ValidationPatience',5,...

DNN = trainNetwork(X(:, 1:num), Y(:, 1:num), layers, options);


end